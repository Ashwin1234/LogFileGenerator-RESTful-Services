[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ashwin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ashwin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Amazon.com Inc. Java 1.8.0_302)
[debug]       Load.loadUnit: plugins took 198.5366ms
[debug]       Load.loadUnit: defsScala took 0.4637ms
[debug] [Loading] Scanning directory C:\Users\Ashwin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashwin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 37.1312 ms
[debug]           Load.resolveProject(global-plugins) took 97.212ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Ashwin\.sbt\1.0\plugins, plugins: List(<none>))) took 181.7226ms
[debug] [Loading] Done in C:\Users\Ashwin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 224.5271ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5165ms
[debug]     Load.loadUnit(file:/C:/Users/Ashwin/.sbt/1.0/plugins/, ...) took 438.0545ms
[debug]   Load.apply: load took 728.8565ms
[debug]   Load.apply: resolveProjects took 9.734ms
[debug]   Load.apply: finalTransforms took 111.6785ms
[debug]   Load.apply: config.delegates took 15.9128ms
[debug]   Load.apply: Def.make(settings)... took 846.6555ms
[debug]   Load.apply: structureIndex took 176.4939ms
[debug]   Load.apply: mkStreams took 2.8687ms
[info] loading global plugins from C:\Users\Ashwin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4595.6098ms
[debug]           Load.loadUnit: plugins took 39.674ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project
[debug]             Load.loadUnit: mkEval took 12.4914ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 9.7485 ms
[info] loading settings for project logrestfullservices-build from plugins.sbt,scalapb.sbt,idea.sbt ...
[debug]               Load.resolveProject(logrestfullservices-build) took 16.8791ms
[debug]             Load.loadTransitive: finalizeProject(Project(id logrestfullservices-build, base: C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project, plugins: List(<none>))) took 27.9257ms
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project, returning: (logrestfullservices-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4524.061ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.4205ms
[debug]         Load.loadUnit(file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/project/, ...) took 4577.8092ms
[debug]       Load.apply: load took 4581.0004ms
[debug]       Load.apply: resolveProjects took 0.236ms
[debug]       Load.apply: finalTransforms took 24.4185ms
[debug]       Load.apply: config.delegates took 0.761ms
[debug]       Load.apply: Def.make(settings)... took 198.3765ms
[debug]       Load.apply: structureIndex took 53.0271ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 15074.934ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices
[debug]       Load.loadUnit: mkEval took 0.4456ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,sbtprotoc.ProtocPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.5458 ms
[info] loading settings for project logrestfullservices from build.sbt ...
[debug]         Load.resolveProject(logrestfullservices) took 44.6498ms
[debug]       Load.loadTransitive: finalizeProject(Project(id logrestfullservices, base: C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices, plugins: List(<none>))) took 51.1721ms
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices, returning: (logrestfullservices)
[debug]     Load.loadUnit: loadedProjectsRaw took 7104.3314ms
[debug]     Load.loadUnit: cleanEvalClasses took 47.3547ms
[debug]   Load.loadUnit(file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/, ...) took 22227.6204ms
[debug] Load.apply: load took 22230.2164ms
[debug] Load.apply: resolveProjects took 0.1418ms
[debug] Load.apply: finalTransforms took 32.6189ms
[debug] Load.apply: config.delegates took 0.3779ms
[debug] Load.apply: Def.make(settings)... took 102.2406ms
[debug] Load.apply: structureIndex took 25.0923ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to LogRestFullServices (in build file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52831 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52831, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to LogRestFullServices (in build file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/)
[debug] > Exec(idea-shell, None, None)
