[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ashwin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ashwin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Amazon.com Inc. Java 1.8.0_302)
[debug]       Load.loadUnit: plugins took 303.0017ms
[debug]       Load.loadUnit: defsScala took 0.7113ms
[debug] [Loading] Scanning directory C:\Users\Ashwin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashwin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 39.4767 ms
[debug]           Load.resolveProject(global-plugins) took 118.1656ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Ashwin\.sbt\1.0\plugins, plugins: List(<none>))) took 299.7198ms
[debug] [Loading] Done in C:\Users\Ashwin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 353.8357ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.542ms
[debug]     Load.loadUnit(file:/C:/Users/Ashwin/.sbt/1.0/plugins/, ...) took 679.2829ms
[debug]   Load.apply: load took 1089.1825ms
[debug]   Load.apply: resolveProjects took 12.7592ms
[debug]   Load.apply: finalTransforms took 114.139ms
[debug]   Load.apply: config.delegates took 17.9105ms
[debug]   Load.apply: Def.make(settings)... took 795.6247ms
[debug]   Load.apply: structureIndex took 182.0798ms
[debug]   Load.apply: mkStreams took 3.5901ms
[info] loading global plugins from C:\Users\Ashwin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5455.9568ms
[debug]           Load.loadUnit: plugins took 42.6754ms
[debug]           Load.loadUnit: defsScala took 0.0094ms
[debug] [Loading] Scanning directory C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project
[debug]             Load.loadUnit: mkEval took 15.2685ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2384 ms
[info] loading settings for project logrestfullservices-build from plugins.sbt,scalapb.sbt,idea.sbt ...
[debug]               Load.resolveProject(logrestfullservices-build) took 8.9034ms
[debug]             Load.loadTransitive: finalizeProject(Project(id logrestfullservices-build, base: C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project, plugins: List(<none>))) took 13.1703ms
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project, returning: (logrestfullservices-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4633.3709ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.635ms
[debug]         Load.loadUnit(file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/project/, ...) took 4687.6129ms
[debug]       Load.apply: load took 4690.4582ms
[debug]       Load.apply: resolveProjects took 0.1941ms
[debug]       Load.apply: finalTransforms took 15.335ms
[debug]       Load.apply: config.delegates took 0.647ms
[debug]       Load.apply: Def.make(settings)... took 171.4416ms
[debug]       Load.apply: structureIndex took 70.928ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9362.0658ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices
[debug]       Load.loadUnit: mkEval took 0.3945ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,sbtprotoc.ProtocPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.8573 ms
[info] loading settings for project logrestfullservices from build.sbt ...
[debug]         Load.resolveProject(logrestfullservices) took 68.2053ms
[debug]       Load.loadTransitive: finalizeProject(Project(id logrestfullservices, base: C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices, plugins: List(<none>))) took 76.8088ms
[debug] [Loading] Done in C:\Users\Ashwin\Documents\CS 441\Assignment 3\LogRestFullServices, returning: (logrestfullservices)
[debug]     Load.loadUnit: loadedProjectsRaw took 8618.5382ms
[debug]     Load.loadUnit: cleanEvalClasses took 69.164ms
[debug]   Load.loadUnit(file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/, ...) took 18050.5727ms
[debug] Load.apply: load took 18056.7875ms
[debug] Load.apply: resolveProjects took 0.1976ms
[debug] Load.apply: finalTransforms took 46.1605ms
[debug] Load.apply: config.delegates took 0.7235ms
[debug] Load.apply: Def.make(settings)... took 191.5439ms
[debug] Load.apply: structureIndex took 38.4186ms
[debug] Load.apply: mkStreams took 0.0063ms
[info] set current project to LogRestFullServices (in build file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52621 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52621, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to LogRestFullServices (in build file:/C:/Users/Ashwin/Documents/CS%20441/Assignment%203/LogRestFullServices/)
[debug] > Exec(idea-shell, None, None)
